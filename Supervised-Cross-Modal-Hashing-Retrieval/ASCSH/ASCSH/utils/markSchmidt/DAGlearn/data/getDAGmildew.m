function [adjMatrix,nodeNames] = getDAG()
nodeNames{1} = 'dm_1';
nodeNames{2} = 'foto_1';
nodeNames{3} = 'straaling_1';
nodeNames{4} = 'temp_1';
nodeNames{5} = 'lai_1';
nodeNames{6} = 'meldug_1';
nodeNames{7} = 'lai_0';
nodeNames{8} = 'dm_2';
nodeNames{9} = 'foto_2';
nodeNames{10} = 'straaling_2';
nodeNames{11} = 'temp_2';
nodeNames{12} = 'lai_2';
nodeNames{13} = 'meldug_2';
nodeNames{14} = 'dm_3';
nodeNames{15} = 'foto_3';
nodeNames{16} = 'straaling_3';
nodeNames{17} = 'temp_3';
nodeNames{18} = 'lai_3';
nodeNames{19} = 'meldug_3';
nodeNames{20} = 'dm_4';
nodeNames{21} = 'foto_4';
nodeNames{22} = 'straaling_4';
nodeNames{23} = 'temp_4';
nodeNames{24} = 'lai_4';
nodeNames{25} = 'meldug_4';
nodeNames{26} = 'mikro_1';
nodeNames{27} = 'middel_1';
nodeNames{28} = 'mikro_2';
nodeNames{29} = 'middel_2';
nodeNames{30} = 'mikro_3';
nodeNames{31} = 'middel_3';
nodeNames{32} = 'nedboer_1';
nodeNames{33} = 'nedboer_2';
nodeNames{34} = 'nedboer_3';
nodeNames{35} = 'udbytte';
adjMatrix = zeros(length(nodeNames));
adjMatrix(2,1) = 1;
adjMatrix(3,2) = 1;
adjMatrix(4,2) = 1;
adjMatrix(5,2) = 1;
adjMatrix(6,5) = 1;
adjMatrix(7,5) = 1;
adjMatrix(1,8) = 1;
adjMatrix(9,8) = 1;
adjMatrix(10,9) = 1;
adjMatrix(11,9) = 1;
adjMatrix(12,9) = 1;
adjMatrix(5,12) = 1;
adjMatrix(13,12) = 1;
adjMatrix(6,13) = 1;
adjMatrix(26,13) = 1;
adjMatrix(27,13) = 1;
adjMatrix(8,14) = 1;
adjMatrix(15,14) = 1;
adjMatrix(16,15) = 1;
adjMatrix(17,15) = 1;
adjMatrix(18,15) = 1;
adjMatrix(12,18) = 1;
adjMatrix(19,18) = 1;
adjMatrix(13,19) = 1;
adjMatrix(28,19) = 1;
adjMatrix(29,19) = 1;
adjMatrix(14,20) = 1;
adjMatrix(21,20) = 1;
adjMatrix(22,21) = 1;
adjMatrix(23,21) = 1;
adjMatrix(24,21) = 1;
adjMatrix(18,24) = 1;
adjMatrix(25,24) = 1;
adjMatrix(19,25) = 1;
adjMatrix(30,25) = 1;
adjMatrix(31,25) = 1;
adjMatrix(4,26) = 1;
adjMatrix(5,26) = 1;
adjMatrix(32,26) = 1;
adjMatrix(11,28) = 1;
adjMatrix(12,28) = 1;
adjMatrix(33,28) = 1;
adjMatrix(17,30) = 1;
adjMatrix(18,30) = 1;
adjMatrix(34,30) = 1;
adjMatrix(20,35) = 1;
P = topologicalPermutation(adjMatrix);
adjMatrix = adjMatrix(P,P);
nodeNames = nodeNames(P);
